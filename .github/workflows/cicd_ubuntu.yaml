name: CI/CD on Linux systems.

permissions:
  contents: write

on:
    push:
    pull_request:
    workflow_dispatch:
    # Automatic cron build every 6 months to check if everything still works.
    schedule:
    - cron: "0 0 1 1/6 *"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      LAZBUILD_WITH_PATH: lazbuild
      RELEASE_FILE_NAME: trackereditor_linux_amd64.AppImage
      LAZ_OPT: --widgetset=qt5

    steps:
    - uses: actions/checkout@v4

    - name: Install dependency
      run: sudo apt-get install -y lazarus fpc fuse xvfb libqt5pas-dev qt5-qmake qtwayland5 qt5-gtk-platformtheme libqt5svg5
      shell: bash

    - name: Build Release version
      # Build trackereditor project (Release mode)
      run: ${{ env.LAZBUILD_WITH_PATH }} --build-all --build-mode=Release ${{ env.LAZ_OPT }} source/project/tracker_editor/trackereditor.lpi
      shell: bash

    - name: Test OpenSSL works on Linux CI
      run: xvfb-run --auto-servernum enduser/trackereditor -TEST_SSL
      shell: bash

    - name: Download linuxdeploy
      # Use static versions of AppImage builder. So it won't depend on some specific OS image or library version.
      run:  |
        curl -L -O  https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-static-x86_64.AppImage
        curl -L -O  https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-static-x86_64.AppImage
        curl -L -O  https://github.com/linuxdeploy/linuxdeploy-plugin-appimage/releases/download/continuous/linuxdeploy-plugin-appimage-x86_64.AppImage
        chmod +x linuxdeploy-*.AppImage
      shell: bash

    - name: Create AppImage
      # NO_STRIP: true => or else warning: qt.qpa.plugin: Could not find the Qt platform plugin "wayland" in ""
      # LDAI_NO_APPSTREAM=1: skip checking AppStream metadata for issues
      env:
        NO_STRIP: true
        LDAI_NO_APPSTREAM: 1
        LDAI_OUTPUT: ${{ env.RELEASE_FILE_NAME }}
      run:  |
        ./linuxdeploy-static-x86_64.AppImage \
          --output appimage \
          --appdir temp_appdir \
          --plugin qt \
          --executable enduser/trackereditor \
          --desktop-file metainfo/io.github.gerryferdinandus.bittorrent-tracker-editor.desktop \
          --icon-file metainfo/io.github.gerryferdinandus.bittorrent-tracker-editor.png
      shell: bash

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifact-${{ runner.os }}
        path: ${{ env.RELEASE_FILE_NAME }}
        compression-level: 0 # no compression. Content is already a compress file
        if-no-files-found: error

    - name: File release to end user
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ env.RELEASE_FILE_NAME }}
